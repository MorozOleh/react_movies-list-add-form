{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","Types/types.js","components/Input/Input.jsx","components/Inputs/Inputs.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","PropTypes","shape","bool","isRequired","Input","name","value","onChange","onBlur","hasWarning","isNotDescription","htmlFor","undefined","placeholder","id","required","classNames","NewMovie__input_warning","NewMovie__message_warning","Inputs","requiredFields","movieFieldsRequired","Object","keys","field","NewMovie","state","handleChange","event","target","setState","prevState","handleBlur","handleSubmit","preventDefault","newFilm","props","onAdd","this","isDisabled","values","some","method","onSubmit","disabled","type","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"szEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kDCxBeK,IAAUC,MAAM,CACvChB,MAAOe,IAAUE,KAAKC,WACtBhB,OAAQa,IAAUE,KAAKC,WACvBf,QAASY,IAAUE,KAAKC,WACxBJ,OAAQC,IAAUE,KAAKC,a,MCClB,SAASC,EAAT,GAMH,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAC,EACC,EADDA,WAEMC,EAA4B,gBAATL,EAEzB,OACE,oCACE,2BACEhB,UAAU,kBACVsB,QAASN,GAFX,UAIMA,EAJN,OAMA,2BACEA,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,OAAQE,EAAmBF,OAASI,EACpCC,YAAY,YACZC,GAAIT,EACJU,SAAUL,EACVrB,UAAW2B,IAAW,kBACpB,CAAEC,wBAAyBR,EAAWJ,OAE1C,yBACEhB,UAAW2B,IAAW,oBACpB,CAAEE,0BAA2BT,EAAWJ,MAF5C,UAIMA,EAJN,kBC9BC,SAASc,EAAT,GAKH,IAJFV,EAIC,EAJDA,WACAF,EAGC,EAHDA,SACAC,EAEC,EAFDA,OACAY,EACC,EADDA,eAEMC,EAAsBC,OAAOC,KAAKH,GAExC,OACE,oCACGC,EAAoBzB,KAAI,SAAC4B,GACxB,OACE,kBAAC,EAAD,CACE1B,IAAK0B,EACLlB,MAAOc,EAAeI,GACtBnB,KAAMmB,EACNjB,SAAUA,EACVC,OAAQA,EACRC,WAAYA,Q,UCjBXgB,EAAb,4MACEC,MAAQ,CACNvB,WAAY,CACVhB,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRd,MAAO,IAETC,YAAa,GACbuB,WAAY,CACVxB,OAAO,EACPE,QAAQ,EACRC,SAAS,EACTW,QAAQ,IAbd,EAkBE4B,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBvB,EADgB,EAChBA,MAAOD,EADS,EACTA,KAEF,gBAATA,EACF,EAAKyB,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,WAAW,2BACNsB,EAAUtB,YADL,kBAEPJ,GAAO,IAEVF,WAAW,2BACN4B,EAAU5B,YADL,kBAEPE,EAAOC,QAIZ,EAAKwB,SAAL,eAAiBzB,EAAOC,KAjC9B,EAqCE0B,WAAa,SAACJ,GAAW,IAAD,EACEA,EAAMC,OAAtBvB,EADc,EACdA,MAAOD,EADO,EACPA,KAEVC,GACH,EAAKwB,UAAS,SAAAC,GAAS,MAAK,CAC1BtB,WAAW,2BACNsB,EAAUtB,YADL,kBAEPJ,GAAO,SA5ClB,EAkDE4B,aAAe,SAACL,GACdA,EAAMM,iBADkB,MAEmB,EAAKR,MAAMvB,WAA9ClB,EAFgB,EAEhBA,MAAOG,EAFS,EAETA,QAASW,EAFA,EAEAA,OAAQZ,EAFR,EAEQA,OAE1BgD,EAAU,CACdlD,QACAC,YAHsB,EAAKwC,MAArBxC,YAINC,SACAY,SACAX,WAUF,EAAK0C,SAAS,CACZ3B,WARiB,CACjBlB,MAAO,GACPG,QAAS,GACTW,OAAQ,GACRZ,OAAQ,IAKRD,YAAa,KAGf,EAAKkD,MAAMC,MAAMF,IA1ErB,4CA6EE,WAAU,IACAF,EAA2CK,KAA3CL,aAAcN,EAA6BW,KAA7BX,aAAcK,EAAeM,KAAfN,WAD7B,EAE4BM,KAAKZ,MAAhCjB,EAFD,EAECA,WAAYN,EAFb,EAEaA,WACdoC,EAAajB,OAAOkB,OAAOrC,GAAYsC,MAC3C,SAAAjB,GAAK,OAAKA,KAGZ,OACE,0BACEkB,OAAO,OACPC,SAAUV,EACV5C,UAAU,kBAEV,kBAAC8B,EAAD,CACEC,eAAgBkB,KAAKZ,MAAMvB,WAC3BM,WAAYA,EACZF,SAAUoB,EACVnB,OAAQwB,IAGV,8BACE3B,KAAK,cACLC,MAAOgC,KAAKZ,MAAMxC,YAClBqB,SAAUoB,EACVd,YAAY,cACZxB,UAAU,uBAEZ,4BACEA,UAAU,mBACVuD,SAAUL,EACVM,KAAK,UAHP,eAxGR,GAA8BC,a,QCAjBC,EAAb,4MACErB,MAAQ,CACN/B,OAAQqD,GAFZ,EAKEC,SAAW,SAACpD,GACV,EAAKiC,UAAS,SAAAC,GAAS,MAAK,CAC1BpC,OAAO,GAAD,mBAAMoC,EAAUpC,QAAhB,CAAwBE,SAPpC,4CAWE,WAAU,IACAF,EAAW2C,KAAKZ,MAAhB/B,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUgD,MAAOC,KAAKW,iBApBhC,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4f66943b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import PropTypes from 'prop-types';\n\nexport const ErrorType = PropTypes.shape({\n  title: PropTypes.bool.isRequired,\n  imgUrl: PropTypes.bool.isRequired,\n  imdbUrl: PropTypes.bool.isRequired,\n  imdbId: PropTypes.bool.isRequired,\n});\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ErrorType } from '../../Types/types';\nimport './Input.scss';\n\nexport function Input({\n  name,\n  value,\n  onChange,\n  onBlur,\n  hasWarning,\n}) {\n  const isNotDescription = name !== 'description';\n\n  return (\n    <>\n      <label\n        className=\"NewMovie__label\"\n        htmlFor={name}\n      >\n        {`${name}: `}\n      </label>\n      <input\n        name={name}\n        value={value}\n        onChange={onChange}\n        onBlur={isNotDescription ? onBlur : undefined}\n        placeholder=\"Type here\"\n        id={name}\n        required={isNotDescription}\n        className={classNames('NewMovie__input',\n          { NewMovie__input_warning: hasWarning[name] })}\n      />\n      <div\n        className={classNames('NewMovie__message',\n          { NewMovie__message_warning: hasWarning[name] })}\n      >\n        {`${name} is required`}\n      </div>\n    </>\n  );\n}\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onBlur: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  hasWarning: ErrorType.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Input } from '../Input';\nimport { ErrorType } from '../../Types/types';\n\nexport function Inputs({\n  hasWarning,\n  onChange,\n  onBlur,\n  requiredFields,\n}) {\n  const movieFieldsRequired = Object.keys(requiredFields);\n\n  return (\n    <>\n      {movieFieldsRequired.map((field) => {\n        return (\n          <Input\n            key={field}\n            value={requiredFields[field]}\n            name={field}\n            onChange={onChange}\n            onBlur={onBlur}\n            hasWarning={hasWarning}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nInputs.propTypes = {\n  onBlur: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  requiredFields: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    imgUrl: PropTypes.string.isRequired,\n    imdbUrl: PropTypes.string.isRequired,\n    imdbId: PropTypes.string.isRequired,\n  }).isRequired,\n  hasWarning: ErrorType.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Inputs } from '../Inputs';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    isRequired: {\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      title: '',\n    },\n    description: '',\n    hasWarning: {\n      title: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    if (name !== 'description') {\n      this.setState(prevState => ({\n        hasWarning: {\n          ...prevState.hasWarning,\n          [name]: false,\n        },\n        isRequired: {\n          ...prevState.isRequired,\n          [name]: value,\n        },\n      }));\n    } else {\n      this.setState({ [name]: value });\n    }\n  }\n\n  handleBlur = (event) => {\n    const { value, name } = event.target;\n\n    if (!value) {\n      this.setState(prevState => ({\n        hasWarning: {\n          ...prevState.hasWarning,\n          [name]: true,\n        },\n      }));\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, imdbUrl, imdbId, imgUrl } = this.state.isRequired;\n    const { description } = this.state;\n    const newFilm = {\n      title,\n      description,\n      imgUrl,\n      imdbId,\n      imdbUrl,\n    };\n\n    const isRequired = {\n      title: '',\n      imdbUrl: '',\n      imdbId: '',\n      imgUrl: '',\n    };\n\n    this.setState({\n      isRequired,\n      description: '',\n    });\n\n    this.props.onAdd(newFilm);\n  }\n\n  render() {\n    const { handleSubmit, handleChange, handleBlur } = this;\n    const { hasWarning, isRequired } = this.state;\n    const isDisabled = Object.values(isRequired).some(\n      field => !field,\n    );\n\n    return (\n      <form\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        className=\"NewMovie__form\"\n      >\n        <Inputs\n          requiredFields={this.state.isRequired}\n          hasWarning={hasWarning}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n\n        <textarea\n          name=\"description\"\n          value={this.state.description}\n          onChange={handleChange}\n          placeholder=\"description\"\n          className=\"NewMovie__textarea\"\n        />\n        <button\n          className=\"NewMovie__button\"\n          disabled={isDisabled}\n          type=\"submit\"\n        >\n          submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}